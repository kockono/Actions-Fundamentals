name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Clona todos los commits (Puede consumir mucho en futuro)

    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: 'major:' # git commit -m "major: Mensaje"
        minor_pattern: 'feat:'  # git commit -m "feat: Mensaje"
        format: $"{major}.{minor}.{patch}-prerelease${increment}"
      id: version # Permite hacer referencia al scrope de Git Semantic Version

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        NEW_VERSION: ${{ steps.version.outputs.version }} # Obtiene el valor de la versión de Git Semantic Version
      run: |
        echo docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        echo "Login Finalizado"
        echo "Nueva Versión: $NEW_VERSION!"
        
    - name: Build Docker Image
      run: |
        echo "Iniciando Build"
        cd graphql-actions && docker build -t chrisajna/docker-graphql:0.0.2 .
        cd graphql-actions && docker build -t chrisajna/docker-graphql:latest .
        echo "Build Finalizado"
    
    - name: Push Docker Image
      run: |
        echo "Iniciando Push"
        docker push chrisajna/docker-graphql:0.0.2
        docker push chrisajna/docker-graphql:latest
        echo "Push Finalizado"    
   